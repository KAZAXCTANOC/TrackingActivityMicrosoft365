// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PulseCosts;

namespace PulseCosts.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PulseCosts.Models.Classifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("K")
                        .HasColumnType("text");

                    b.Property<string>("M")
                        .HasColumnType("text");

                    b.Property<string>("P")
                        .HasColumnType("text");

                    b.Property<string>("X")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Classifiers");
                });

            modelBuilder.Entity("PulseCosts.Models.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("G")
                        .HasColumnType("text");

                    b.Property<string>("H")
                        .HasColumnType("text");

                    b.Property<string>("I")
                        .HasColumnType("text");

                    b.Property<string>("J")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PulseCosts.Models.PulseCostTableElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ClassifierId")
                        .HasColumnType("integer");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("RowName")
                        .HasColumnType("text");

                    b.Property<int>("WorkId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassifierId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("WorkId");

                    b.ToTable("PulseCostTableElements");
                });

            modelBuilder.Entity("PulseCosts.Models.SqlDbModel.HistoryChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("B")
                        .HasColumnType("text");

                    b.Property<string>("C")
                        .HasColumnType("text");

                    b.Property<string>("CC")
                        .HasColumnType("text");

                    b.Property<string>("CE")
                        .HasColumnType("text");

                    b.Property<string>("CK")
                        .HasColumnType("text");

                    b.Property<string>("CM")
                        .HasColumnType("text");

                    b.Property<string>("CP")
                        .HasColumnType("text");

                    b.Property<string>("CX")
                        .HasColumnType("text");

                    b.Property<string>("D")
                        .HasColumnType("text");

                    b.Property<string>("E")
                        .HasColumnType("text");

                    b.Property<string>("F")
                        .HasColumnType("text");

                    b.Property<string>("G")
                        .HasColumnType("text");

                    b.Property<string>("H")
                        .HasColumnType("text");

                    b.Property<string>("I")
                        .HasColumnType("text");

                    b.Property<string>("K")
                        .HasColumnType("text");

                    b.Property<string>("L")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeChange")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("HistoryChanges");
                });

            modelBuilder.Entity("PulseCosts.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("B")
                        .HasColumnType("text");

                    b.Property<string>("C")
                        .HasColumnType("text");

                    b.Property<string>("D")
                        .HasColumnType("text");

                    b.Property<string>("E")
                        .HasColumnType("text");

                    b.Property<string>("F")
                        .HasColumnType("text");

                    b.Property<string>("G")
                        .HasColumnType("text");

                    b.Property<string>("H")
                        .HasColumnType("text");

                    b.Property<string>("I")
                        .HasColumnType("text");

                    b.Property<string>("J")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("PulseCosts.Models.PulseCostTableElement", b =>
                {
                    b.HasOne("PulseCosts.Models.Classifier", "Classifier")
                        .WithMany()
                        .HasForeignKey("ClassifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PulseCosts.Models.Materials", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PulseCosts.Models.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
